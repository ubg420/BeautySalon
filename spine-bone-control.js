"use strict";class SpineBoneControl{constructor(o){this._bones={},this._debug=o}get bones(){return this._bones}get debug(){return this._debug}setBoneControl(o,e,n){this.bones.hasOwnProperty(o)||(this.bones[o]={}),this.bones[o][e]=n}removeBoneControl(o,e){this.bones.hasOwnProperty(o)&&this.bones[o].hasOwnProperty(e)?delete this.bones[o][e]:console.warn("[Spine] removeBoneConrtol, no control",o,e)}removeAllBoneControl(o,e){this.bones.hasOwnProperty(o)?delete this.bones[o]:console.warn("[Spine] removeAllBoneConrtol, no contro",o)}applyBoneControl(o){const e=this.bones;for(let n in e){if(!e[n].hasOwnProperty("__boneControlReference")){let t=o.findBone(n);if(!t){console.warn("[Spine] applyBoneControl bone not found",n);continue}e[n].__boneControlReference=t}for(const o in e[n])"__boneControlReference"!=o&&(e[n].__boneControlReference[o]=e[n][o])}}}globalThis.SpineBoneControl||(globalThis.SpineBoneControl=SpineBoneControl);