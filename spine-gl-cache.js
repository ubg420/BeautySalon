"use strict";class SpineGLCache{constructor(t,e){this._oldFrameBuffer=null,this._extOESVAO=null,this._oldVAO=null,this._oldProgram=null,this._oldActive=null,this._oldTex=null,this._oldBinding=null,this._oldElement=null,this._oldClearColor=null,this._oldViewport=null,this._isWebGL2=t,this._gl=e,this._scissor=null,this._scissorBox=null}store(){const t=this._gl,e=this._isWebGL2;this._oldFrameBuffer=t.getParameter(t.FRAMEBUFFER_BINDING),e||(this._extOESVAO=t.getExtension("OES_vertex_array_object")),e?(this._oldVAO=t.createVertexArray(),this._oldVAO=t.getParameter(t.VERTEX_ARRAY_BINDING)):(this._oldVAO=this._extOESVAO.createVertexArrayOES(),this._oldVAO=t.getParameter(this._extOESVAO.VERTEX_ARRAY_BINDING_OES)),this._oldProgram=t.getParameter(t.CURRENT_PROGRAM),this._oldActive=t.getParameter(t.ACTIVE_TEXTURE),this._oldTex=t.getParameter(t.TEXTURE_BINDING_2D),this._oldBinding=t.getParameter(t.ARRAY_BUFFER_BINDING),this._oldElement=t.getParameter(t.ELEMENT_ARRAY_BUFFER_BINDING),this._oldClearColor=t.getParameter(t.COLOR_CLEAR_VALUE),this._oldViewport=t.getParameter(t.VIEWPORT),this._scissor=t.getParameter(t.SCISSOR_TEST),this._scissor&&(this._scissorBox=t.getParameter(t.SCISSOR_BOX))}restore(){const t=this._gl;t.bindFramebuffer(t.FRAMEBUFFER,this._oldFrameBuffer),t.useProgram(this._oldProgram),this._isWebGL2?t.bindVertexArray(this._oldVAO):this._extOESVAO.bindVertexArrayOES(this._oldVAO),t.activeTexture(this._oldActive),t.bindTexture(t.TEXTURE_2D,this._oldTex),t.bindBuffer(t.ARRAY_BUFFER,this._oldBinding),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this._oldElement),t.clearColor(this._oldClearColor[0],this._oldClearColor[1],this._oldClearColor[2],this._oldClearColor[3]),t.enable(t.BLEND),t.blendFunc(t.ONE,t.ONE_MINUS_SRC_ALPHA),t.viewport(this._oldViewport[0],this._oldViewport[1],this._oldViewport[2],this._oldViewport[3]),this._scissor&&t.enable(t.SCISSOR_TEST),this._scissor&&t.scissor(this._scissorBox[0],this._scissorBox[1],this._scissorBox[2],this._scissorBox[3])}}globalThis.SpineGLCache||(globalThis.SpineGLCache=SpineGLCache);